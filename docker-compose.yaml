version: "3"

volumes:
  dev-postgres-db-data:

services:
  app:
    build:
      context: .
      args:
        - DEV=true
        - PORT=${APP_PORT}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - ./src/app:/app
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:${APP_PORT}"
    environment:
      - DB_HOST=postgres_db
      - DB_NAME=${POSTGRES_DB_NAME}
      - DB_USER=${POSTGRES_DB_USER}
      - DB_PASS=${POSTGRES_DB_PASS}
      - SECRET_KEY=${APP_SECRET_KEY}
      - ALLOWED_HOSTS=${APP_ALLOWED_HOSTS}
      - DEBUG=${APP_DEBUG}
    depends_on:
      postgres_db:
        condition: service_healthy
  postgres_db:
    image: postgres:13-alpine
    volumes:
      - dev-postgres-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASS}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_DB_USER} -d ${POSTGRES_DB_NAME}'" ]
      interval: 10s
      timeout: 5s
      retries: 5
